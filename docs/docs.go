// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://rrl360.com/index.html",
        "contact": {
            "name": "伍晓飞",
            "email": "wuxiaofei@rechaintech.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/pub/stock/info": {
            "get": {
                "description": "获取美股价格 苹果代码  AAPL  ,苹果代码 TSLA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "default"
                ],
                "summary": "获取美股价格:",
                "operationId": "StockInfoHandler",
                "parameters": [
                    {
                        "type": "string",
                        "default": "AAPL",
                        "description": "美股代码",
                        "name": "code",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1620383144,
                        "description": "unix 秒数",
                        "name": "timestamp",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "stock info",
                        "schema": {
                            "$ref": "#/definitions/services.ViewStock"
                        },
                        "headers": {
                            "sign": {
                                "type": "string",
                                "description": "签名信息"
                            }
                        }
                    },
                    "500": {
                        "description": "失败时，有相应测试日志输出",
                        "schema": {
                            "$ref": "#/definitions/main.ApiErr"
                        }
                    }
                }
            }
        },
        "/pub/stock/sign_verify": {
            "post": {
                "description": "签名验证",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "default"
                ],
                "summary": "签名验证:",
                "operationId": "VerifyInfoHandler",
                "parameters": [
                    {
                        "description": "需要验证的对象",
                        "name": "verObj",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.VerObj"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok info",
                        "schema": {
                            "$ref": "#/definitions/main.ApiOk"
                        }
                    },
                    "500": {
                        "description": "失败时，有相应测试日志输出",
                        "schema": {
                            "$ref": "#/definitions/main.ApiErr"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.ApiErr": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                }
            }
        },
        "main.ApiOk": {
            "type": "object",
            "properties": {
                "Msg": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "main.VerObj": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "stockInfo json: {\"code\":\"AAPL\",\"price\":128.1,\"name\":\"苹果\",\"timestamp\":1620292445,\"UpdatedAt\":\"2021-05-06T17:14:05.878+08:00\"}",
                    "type": "object"
                },
                "sign": {
                    "type": "string",
                    "format": "base64",
                    "example": "UhRVNsT8B5Za6oO3APH0T9ebPMKHxDDhkscYuILl7lDepDMzyBaQsEu9vwTRIfoYBS8udfEanI/DUAhwnIdFJf9woIv7Oo+OS6q3sF3B5Vx9NN2ipXJ4wjTf2ct7FbS1vXAvTXSmA2svj+LF8P1PIEClITBqu/EWZXTpHvAlbGAAeF+hHO7/FquLHVDavLC+OENyb0CP+NvH+ytZ69tav0DqbGp+NGGil/ImZpPsetbOxwuhC/U1CV6Ap8qgRWe8s6IpOawXDAavLMHUmXVvORDf/XVzaQUJ5ob+vTsSTZwQsvj/4jmsODFt8eKFYL/7vyN/i3HkiDwhq0w85kqHgg=="
                }
            }
        },
        "services.ViewStock": {
            "type": "object",
            "properties": {
                "Code": {
                    "description": "代码 苹果代码 AAPL ,特斯拉代码 TSLA",
                    "type": "string"
                },
                "Price": {
                    "description": "最新价",
                    "type": "number"
                },
                "StockName": {
                    "description": "名称",
                    "type": "string"
                },
                "Timestamp": {
                    "description": "unix 秒数",
                    "type": "integer"
                },
                "UpdatedAt": {
                    "description": "rfc3339 fortmat",
                    "type": "string",
                    "example": "2021-05-07T18:25:44.27+08:00"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "stock-info-api",
	Description: "stock-info-api接口文档.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
